pipeline {
    agent {
        docker {
            registryUrl 'https://registry.az1'
            registryCredentialsId 'credentials-id'
        }
    }

  environment {
    DOCKERHUB_CREDENTIALS = 'a8880ebf-c6e5-48bc-b6f0-6a6856e6190d'
    DOCKERHUB_NAMESPACE   = 'haridasuavinash'
    IMAGE_NAME            = "${DOCKERHUB_NAMESPACE}/newssearch"
    KUBECONFIG_CREDENTIALS = 'kubeconfig'
    K8S_NAMESPACE         = 'dev'
    JAVA_HOME             = 'C:\\Users\\avina\\.jdks\\azul-21.0.8\\'
    PATH                  = "${JAVA_HOME}\\bin;${PATH}"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build JAR') {
      steps {
        bat '.\\gradlew clean build --no-daemon'
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          docker.build("${IMAGE_NAME}:latest", '-f Dockerfile .')
        }
      }
    }

    stage('Push to Docker Hub') {
      steps {
        script {
          docker.withRegistry('https://registry.hub.docker.com', env.DOCKERHUB_CREDENTIALS) {
            docker.image("${IMAGE_NAME}:latest").push()
          }
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        withCredentials([file(credentialsId: env.KUBECONFIG_CREDENTIALS, variable: 'KUBECONFIG')]) {
          sh """
            kubectl apply -n ${K8S_NAMESPACE} -f k8s/
            kubectl rollout status deployment/newssearch-app -n ${K8S_NAMESPACE}
          """
        }
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}